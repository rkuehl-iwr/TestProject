branches:
  only:
    - master

image:
  - macOS
  - Visual Studio 2019
  - Ubuntu
  
for:
-
  matrix:
    only:
      - image: Ubuntu
  install:
  - sudo apt-get update -qq
  - sudo apt-get -y install build-essential
  - sudo apt-get -y install qtbase5-dev libqt5opengl5-dev libgl-dev
  after_build:
  - mkdir release
  - cp testProj release
  test_script:
  - build/tests/testProjectTests -o test_reportUbuntu.xml -r junit || true
  - sh: curl -F 'file=test_reportUbuntu.xml' "https://ci.appveyor.com/api/testresults/junit/$APPVEYOR_JOB_ID"
-
  matrix:
    only:
      - image: Visual Studio 2019
  install:
  - cmd: set QTDIR=C:\Qt\5.14.1\msvc2017_64
  - cmd: set PATH=%QTDIR%\bin;C:\Qt\Tools\msvc2017_64\bin;%PATH%;
  after_build:
  - windeployqt release/testProjectTests.exe
  test_script:
  - .\build\tests\Release\gigameshCore_tests.exe -o test_reportWin.xml -r junit & exit 0
    #upload results
  - ps: $wc = New-Object 'System.Net.WebClient'
  - ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test_reportWin.xml))
-
  matrix:
    only:
      - image: macOS
  install:
  - brew update > /dev/null
  - brew install qt5
  - chmod -R 755 /usr/local/opt/qt5/*
  - export QTDIR="/usr/local/opt/qt5"
  - export PATH="$QTDIR/bin:$PATH"
  - export QT_SELECT=qt5
  after_build:
  - mkdir release
  - cp -r testProj.app release/testProj.app
  - cd release
  - macdeployqt testProj.app -verbose=3
  - ls
  - cd ..
  test_script:
  - build/tests/testProjectTests -o test_reportMac.xml -r junit || true
  - sh: curl -F 'file=test_reportMac.xml' "https://ci.appveyor.com/api/testresults/junit/$APPVEYOR_JOB_ID"

build_script:
  - cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./install
  - cmake --build . --config Release
  - cmake --build . --config Release --target install
  
artifacts:
  - path: release
    type: zip  
